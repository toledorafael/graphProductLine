MATCH (a:cVariable {filename: "Node.h",label: "nodeCount"}), (b:cFunction {filename: "Node.h",label: "Node"})               
MERGE (a)->[:read {condition: "true"}]->(b)                                        
MATCH (a:cVariable {filename: "Node.h",label: "nodeCount"}), (b:cVariable {filename: "Node.h",label: "id"})                 
MERGE (a)->[:varWrite {condition: "true"}]->(b)                                    
MATCH (a:cVariable {filename: "Node.h",label: "newValue"}), (b:cFunction {filename: "Node.h",label: "setValue"})           
MERGE (a)->[:read {condition: "true"}]->(b)                                        
MATCH (a:cVariable {filename: "Node.h",label: "newValue"}), (b:cVariable {filename: "Node.h",label: "value"})              
MERGE (a)->[:varWrite {condition: "true"}]->(b)                                    
MATCH (a:cVariable {filename: "GraphApp.h",label: "kBFS"}), (b:cFunction {filename: "GraphApp.h",label: "conComps"})       
MERGE (a)->[:read {condition: "true"}]->(b)                                        
MATCH (a:cVariable {filename: "GraphApp.h",label: "kBFS"}), (b:cFunction {filename: "GraphApp.h",label: "BFS"})            
MERGE (a)->[:varInfFunc {condition: "kBFS /\ kUndirected"}]->(b)                   
MATCH (a:cVariable {filename: "GraphApp.h",label: "kBFS"}), (b:cFunction {filename: "GraphApp.h",label: "clearVisited"})   
MERGE (a)->[:varInfFunc {condition: "(kBFS \/ kDFS) /\ kUndirected"}]->(b)         
MATCH (a:cVariable {filename: "GraphApp.h",label: "kConnectedComps"}), (b:cFunction {filename: "GraphApp.h",label: "conComps"})       
MERGE (a)->[:varInfFunc {condition: "kConnectedComps"}]->(b)                       
MATCH (a:cVariable {filename: "GraphApp.h",label: "kDFS"}), (b:cFunction {filename: "GraphApp.h",label: "conComps"})       
MERGE (a)->[:read {condition: "true"}]->(b)                                        
MATCH (a:cVariable {filename: "GraphApp.h",label: "kDFS"}), (b:cFunction {filename: "GraphApp.h",label: "DFS"})            
MERGE (a)->[:varInfFunc {condition: "kDFS /\ kUndirected"}]->(b)                   
MATCH (a:cVariable {filename: "GraphApp.h",label: "kDFS"}), (b:cFunction {filename: "GraphApp.h",label: "clearVisited"})   
MERGE (a)->[:varInfFunc {condition: "kDFS"}]->(b)                                  
MATCH (a:cVariable {filename: "GraphApp.h",label: "kPrim"}), (b:cFunction {filename: "GraphApp.h",label: "MSTPrim"})        
MERGE (a)->[:varInfFunc {condition: "kPrim"}]->(b)                                 
MATCH (a:cVariable {filename: "GraphApp.h",label: "kUndirected"}), (b:cFunction {filename: "GraphApp.h",label: "conComps"})       
MERGE (a)->[:read {condition: "true"}]->(b)                                        
MATCH (a:cVariable {filename: "GraphApp.h",label: "kUndirected"}), (b:cFunction {filename: "GraphApp.h",label: "MSTPrim"})        
MERGE (a)->[:read {condition: "true"}]->(b)                                        
MATCH (a:cVariable {filename: "GraphApp.h",label: "kUndirected"}), (b:cFunction {filename: "Edge.h",label: "getTargetID"})        
MERGE (a)->[:varInfFunc {condition: "kWeighted /\ kUndirected"}]->(b)              
MATCH (a:cVariable {filename: "GraphApp.h",label: "kUndirected"}), (b:cFunction {filename: "GraphApp.h",label: "clearVisited"})   
MERGE (a)->[:varInfFunc {condition: "(kBFS \/ kDFS) /\ kUndirected"}]->(b)         
MATCH (a:cVariable {filename: "GraphApp.h",label: "kUndirected"}), (b:cFunction {filename: "Edge.h",label: "getSrcID"})           
MERGE (a)->[:varInfFunc {condition: "kWeighted /\ kUndirected"}]->(b)              
MATCH (a:cVariable {filename: "GraphApp.h",label: "kUndirected"}), (b:cFunction {filename: "Node.h",label: "getName"})            
MERGE (a)->[:varInfFunc {condition: "kWeighted /\ kUndirected"}]->(b)              
MATCH (a:cClass {filename: "Edge.h",label: "Edge"}), (b:cFunction {filename: "Edge.h",label: "Edge"})               
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cClass {filename: "Edge.h",label: "Edge"}), (b:cFunction {filename: "Edge.h",label: "getID"})              
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cClass {filename: "Edge.h",label: "Edge"}), (b:cFunction {filename: "Edge.h",label: "~Edge"})              
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cClass {filename: "Edge.h",label: "Edge"}), (b:cFunction {filename: "Edge.h",label: "getSrcID"})           
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cClass {filename: "Edge.h",label: "Edge"}), (b:cFunction {filename: "Edge.h",label: "getWeight"})          
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cClass {filename: "Edge.h",label: "Edge"}), (b:cFunction {filename: "Edge.h",label: "getNext"})            
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cClass {filename: "Edge.h",label: "Edge"}), (b:cFunction {filename: "Edge.h",label: "getTargetID"})        
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cClass {filename: "Edge.h",label: "Edge"}), (b:cVariable {filename: "Edge.h",label: "weight"})             
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cClass {filename: "Edge.h",label: "Edge"}), (b:cVariable {filename: "Edge.h",label: "srcID"})              
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cClass {filename: "Edge.h",label: "Edge"}), (b:cVariable {filename: "Edge.h",label: "targetID"})           
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cClass {filename: "Edge.h",label: "Edge"}), (b:cVariable {filename: "Edge.h",label: "edgeID"})             
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cClass {filename: "Edge.h",label: "Edge"}), (b:cVariable {filename: "Edge.h",label: "edgeCount"})          
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cClass {filename: "GraphApp.h",label: "GraphApp"}), (b:cFunction {filename: "GraphApp.h",label: "updateName"})     
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cClass {filename: "GraphApp.h",label: "GraphApp"}), (b:cFunction {filename: "GraphApp.h",label: "loadGraph"})      
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cClass {filename: "GraphApp.h",label: "GraphApp"}), (b:cFunction {filename: "GraphApp.h",label: "~GraphApp"})      
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cClass {filename: "GraphApp.h",label: "GraphApp"}), (b:cFunction {filename: "GraphApp.h",label: "setupMenu"})      
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cClass {filename: "GraphApp.h",label: "GraphApp"}), (b:cFunction {filename: "GraphApp.h",label: "printHeader"})    
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cClass {filename: "GraphApp.h",label: "GraphApp"}), (b:cFunction {filename: "GraphApp.h",label: "updateWeight"})   
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cClass {filename: "GraphApp.h",label: "GraphApp"}), (b:cFunction {filename: "GraphApp.h",label: "printEdges"})     
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cClass {filename: "GraphApp.h",label: "GraphApp"}), (b:cFunction {filename: "GraphApp.h",label: "printNgbrs"})     
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cClass {filename: "GraphApp.h",label: "GraphApp"}), (b:cFunction {filename: "GraphApp.h",label: "DFS"})            
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cClass {filename: "GraphApp.h",label: "GraphApp"}), (b:cFunction {filename: "GraphApp.h",label: "clearVisited"})   
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cClass {filename: "GraphApp.h",label: "GraphApp"}), (b:cFunction {filename: "GraphApp.h",label: "addEdge"})        
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cClass {filename: "GraphApp.h",label: "GraphApp"}), (b:cFunction {filename: "GraphApp.h",label: "isCyclic"})       
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cClass {filename: "GraphApp.h",label: "GraphApp"}), (b:cFunction {filename: "GraphApp.h",label: "loadConfig"})     
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cClass {filename: "GraphApp.h",label: "GraphApp"}), (b:cFunction {filename: "GraphApp.h",label: "GraphApp"})       
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cClass {filename: "GraphApp.h",label: "GraphApp"}), (b:cFunction {filename: "GraphApp.h",label: "conComps"})       
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cClass {filename: "GraphApp.h",label: "GraphApp"}), (b:cFunction {filename: "GraphApp.h",label: "MSTPrim"})        
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cClass {filename: "GraphApp.h",label: "GraphApp"}), (b:cFunction {filename: "GraphApp.h",label: "BFS"})            
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cClass {filename: "GraphApp.h",label: "GraphApp"}), (b:cFunction {filename: "GraphApp.h",label: "addEdge"})        
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cClass {filename: "GraphApp.h",label: "GraphApp"}), (b:cFunction {filename: "GraphApp.h",label: "execComnd"})      
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cClass {filename: "GraphApp.h",label: "GraphApp"}), (b:cFunction {filename: "GraphApp.h",label: "checkNode"})      
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cClass {filename: "GraphApp.h",label: "GraphApp"}), (b:cFunction {filename: "GraphApp.h",label: "addNode"})        
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cClass {filename: "GraphApp.h",label: "GraphApp"}), (b:cVariable {filename: "GraphApp.h",label: "visited"})        
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cClass {filename: "GraphApp.h",label: "GraphApp"}), (b:cVariable {filename: "GraphApp.h",label: "recurStack"})     
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cClass {filename: "GraphApp.h",label: "GraphApp"}), (b:cVariable {filename: "GraphApp.h",label: "edges"})          
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cClass {filename: "GraphApp.h",label: "GraphApp"}), (b:cVariable {filename: "GraphApp.h",label: "parentNodeID"})   
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cClass {filename: "GraphApp.h",label: "GraphApp"}), (b:cVariable {filename: "GraphApp.h",label: "nodes"})          
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cClass {filename: "GraphApp.h",label: "GraphApp"}), (b:cVariable {filename: "GraphApp.h",label: "UPDATEEDGE"})     
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cClass {filename: "GraphApp.h",label: "GraphApp"}), (b:cVariable {filename: "GraphApp.h",label: "PRINTGRAPH"})     
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cClass {filename: "GraphApp.h",label: "GraphApp"}), (b:cVariable {filename: "GraphApp.h",label: "ancestors"})      
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cClass {filename: "GraphApp.h",label: "GraphApp"}), (b:cVariable {filename: "GraphApp.h",label: "activeCommds"})   
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cClass {filename: "GraphApp.h",label: "GraphApp"}), (b:cVariable {filename: "GraphApp.h",label: "SHORTESTPATH"})   
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cClass {filename: "GraphApp.h",label: "GraphApp"}), (b:cVariable {filename: "GraphApp.h",label: "KRUSKAL"})        
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cClass {filename: "GraphApp.h",label: "GraphApp"}), (b:cVariable {filename: "GraphApp.h",label: "UPDATENODE"})     
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cClass {filename: "GraphApp.h",label: "GraphApp"}), (b:cVariable {filename: "GraphApp.h",label: "HELP"})           
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cClass {filename: "GraphApp.h",label: "GraphApp"}), (b:cVariable {filename: "GraphApp.h",label: "SCC"})            
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cClass {filename: "GraphApp.h",label: "GraphApp"}), (b:cVariable {filename: "GraphApp.h",label: "PRIM"})           
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cClass {filename: "GraphApp.h",label: "GraphApp"}), (b:cVariable {filename: "GraphApp.h",label: "EXIT"})           
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cClass {filename: "GraphApp.h",label: "GraphApp"}), (b:cVariable {filename: "GraphApp.h",label: "CYCLE"})          
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cClass {filename: "GraphApp.h",label: "GraphApp"}), (b:cVariable {filename: "GraphApp.h",label: "CC"})             
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cClass {filename: "GraphApp.h",label: "GraphApp"}), (b:cVariable {filename: "GraphApp.h",label: "ADDNODE"})        
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cClass {filename: "GraphApp.h",label: "GraphApp"}), (b:cVariable {filename: "GraphApp.h",label: "ADDEDGE"})        
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cClass {filename: "Node.h",label: "Node"}), (b:cFunction {filename: "Node.h",label: "getName"})            
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cClass {filename: "Node.h",label: "Node"}), (b:cFunction {filename: "Node.h",label: "setValue"})           
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cClass {filename: "Node.h",label: "Node"}), (b:cFunction {filename: "Node.h",label: "addNgbr"})            
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cClass {filename: "Node.h",label: "Node"}), (b:cFunction {filename: "Node.h",label: "getNgbrs"})           
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cClass {filename: "Node.h",label: "Node"}), (b:cFunction {filename: "Node.h",label: "Node"})               
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cClass {filename: "Node.h",label: "Node"}), (b:cFunction {filename: "Node.h",label: "getID"})              
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cClass {filename: "Node.h",label: "Node"}), (b:cFunction {filename: "Node.h",label: "setName"})            
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cClass {filename: "Node.h",label: "Node"}), (b:cFunction {filename: "Node.h",label: "getValue"})           
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cClass {filename: "Node.h",label: "Node"}), (b:cFunction {filename: "Node.h",label: "~Node"})              
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cClass {filename: "Node.h",label: "Node"}), (b:cVariable {filename: "Node.h",label: "value"})              
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cClass {filename: "Node.h",label: "Node"}), (b:cVariable {filename: "Node.h",label: "name"})               
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cClass {filename: "Node.h",label: "Node"}), (b:cVariable {filename: "Node.h",label: "neighbors"})          
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cClass {filename: "Node.h",label: "Node"}), (b:cVariable {filename: "Node.h",label: "id"})                 
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cClass {filename: "Node.h",label: "Node"}), (b:cVariable {filename: "Node.h",label: "nodeCount"})          
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "Edge.h",label: "Edge"}), (b:cVariable {filename: "Edge.h",label: "weight"})             
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "Edge.h",label: "Edge"}), (b:cVariable {filename: "Edge.h",label: "targetID"})           
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "Edge.h",label: "Edge"}), (b:cVariable {filename: "Edge.h",label: "srcID"})              
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "Edge.h",label: "Edge"}), (b:cVariable {filename: "Edge.h",label: "edgeID"})             
MERGE (a)->[:write {condition: "true"}]->(b)                                       
MATCH (a:cFunction {filename: "Edge.h",label: "Edge"}), (b:cVariable {filename: "Edge.h",label: "edgeCount"})          
MERGE (a)->[:write {condition: "true"}]->(b)                                       
MATCH (a:cFunction {filename: "Edge.h",label: "getNext"}), (b:cVariable {filename: "Edge.h",label: "currNodeID"})         
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "BFS"}), (b:cVariable {filename: "GraphApp.cc",label: "neighborID"})    
MERGE (a)->[:contain {condition: "!kWeighted"}]->(b)                               
MATCH (a:cFunction {filename: "GraphApp.h",label: "BFS"}), (b:cVariable {filename: "GraphApp.cc",label: "queue"})         
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "BFS"}), (b:cVariable {filename: "GraphApp.h",label: "command"})        
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "BFS"}), (b:cVariable {filename: "GraphApp.cc",label: "targetID"})      
MERGE (a)->[:contain {condition: "kWeighted"}]->(b)                                
MATCH (a:cFunction {filename: "GraphApp.h",label: "BFS"}), (b:cVariable {filename: "GraphApp.cc",label: "currNodeID"})    
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "BFS"}), (b:cVariable {filename: "GraphApp.cc",label: "srcID"})         
MERGE (a)->[:contain {condition: "kWeighted /\ kUndirected"}]->(b)                 
MATCH (a:cFunction {filename: "GraphApp.h",label: "BFS"}), (b:cVariable {filename: "GraphApp.cc",label: "edge"})          
MERGE (a)->[:contain {condition: "kWeighted"}]->(b)                                
MATCH (a:cFunction {filename: "GraphApp.h",label: "BFS"}), (b:cVariable {filename: "GraphApp.h",label: "nodeID"})         
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "BFS"}), (b:cFunction {filename: "Edge.h",label: "getTargetID"})        
MERGE (a)->[:call {condition: "kWeighted"}]->(b)                                   
MATCH (a:cFunction {filename: "GraphApp.h",label: "BFS"}), (b:cFunction {filename: "Node.h",label: "getNgbrs"})           
MERGE (a)->[:call {condition: "!kWeighted"}]->(b)                                  
MATCH (a:cFunction {filename: "GraphApp.h",label: "BFS"}), (b:cFunction {filename: "Edge.h",label: "getSrcID"})           
MERGE (a)->[:call {condition: "kWeighted /\ kUndirected"}]->(b)                    
MATCH (a:cFunction {filename: "GraphApp.h",label: "BFS"}), (b:cVariable {filename: "GraphApp.cc",label: "queue"})         
MERGE (a)->[:write {condition: "true"}]->(b)                                       
MATCH (a:cFunction {filename: "GraphApp.h",label: "BFS"}), (b:cVariable {filename: "GraphApp.cc",label: "currNodeID"})    
MERGE (a)->[:write {condition: "true"}]->(b)                                       
MATCH (a:cFunction {filename: "GraphApp.h",label: "BFS"}), (b:cVariable {filename: "GraphApp.cc",label: "srcID"})         
MERGE (a)->[:write {condition: "kWeighted /\ kUndirected"}]->(b)                   
MATCH (a:cFunction {filename: "GraphApp.h",label: "BFS"}), (b:cVariable {filename: "GraphApp.cc",label: "targetID"})      
MERGE (a)->[:write {condition: "kWeighted"}]->(b)                                  
MATCH (a:cFunction {filename: "GraphApp.h",label: "BFS"}), (b:cVariable {filename: "GraphApp.cc",label: "edge"})          
MERGE (a)->[:write {condition: "kWeighted"}]->(b)                                  
MATCH (a:cFunction {filename: "GraphApp.h",label: "BFS"}), (b:cVariable {filename: "GraphApp.cc",label: "neighborID"})    
MERGE (a)->[:write {condition: "!kWeighted"}]->(b)                                 
MATCH (a:cFunction {filename: "GraphApp.h",label: "DFS"}), (b:cVariable {filename: "GraphApp.cc",label: "targetID"})      
MERGE (a)->[:contain {condition: "kWeighted"}]->(b)                                
MATCH (a:cFunction {filename: "GraphApp.h",label: "DFS"}), (b:cVariable {filename: "GraphApp.h",label: "parent"})         
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "DFS"}), (b:cVariable {filename: "GraphApp.h",label: "command"})        
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "DFS"}), (b:cVariable {filename: "GraphApp.cc",label: "next"})          
MERGE (a)->[:contain {condition: "kWeighted /\ kUndirected"}]->(b)                 
MATCH (a:cFunction {filename: "GraphApp.h",label: "DFS"}), (b:cVariable {filename: "GraphApp.cc",label: "neighborID"})    
MERGE (a)->[:contain {condition: "!kWeighted"}]->(b)                               
MATCH (a:cFunction {filename: "GraphApp.h",label: "DFS"}), (b:cVariable {filename: "GraphApp.cc",label: "edge"})          
MERGE (a)->[:contain {condition: "kWeighted"}]->(b)                                
MATCH (a:cFunction {filename: "GraphApp.h",label: "DFS"}), (b:cVariable {filename: "GraphApp.h",label: "nodeID"})         
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "DFS"}), (b:cVariable {filename: "GraphApp.cc",label: "srcID"})         
MERGE (a)->[:contain {condition: "kWeighted /\ kUndirected"}]->(b)                 
MATCH (a:cFunction {filename: "GraphApp.h",label: "DFS"}), (b:cFunction {filename: "Edge.h",label: "getSrcID"})           
MERGE (a)->[:call {condition: "kWeighted /\ kUndirected"}]->(b)                    
MATCH (a:cFunction {filename: "GraphApp.h",label: "DFS"}), (b:cFunction {filename: "Node.h",label: "getNgbrs"})           
MERGE (a)->[:call {condition: "!kWeighted"}]->(b)                                  
MATCH (a:cFunction {filename: "GraphApp.h",label: "DFS"}), (b:cFunction {filename: "GraphApp.h",label: "DFS"})            
MERGE (a)->[:call {condition: "true"}]->(b)                                        
MATCH (a:cFunction {filename: "GraphApp.h",label: "DFS"}), (b:cFunction {filename: "Edge.h",label: "getTargetID"})        
MERGE (a)->[:call {condition: "kWeighted"}]->(b)                                   
MATCH (a:cFunction {filename: "GraphApp.h",label: "DFS"}), (b:cVariable {filename: "GraphApp.cc",label: "neighborID"})    
MERGE (a)->[:write {condition: "!kWeighted"}]->(b)                                 
MATCH (a:cFunction {filename: "GraphApp.h",label: "DFS"}), (b:cVariable {filename: "GraphApp.cc",label: "targetID"})      
MERGE (a)->[:write {condition: "kWeighted"}]->(b)                                  
MATCH (a:cFunction {filename: "GraphApp.h",label: "DFS"}), (b:cVariable {filename: "GraphApp.cc",label: "edge"})          
MERGE (a)->[:write {condition: "kWeighted"}]->(b)                                  
MATCH (a:cFunction {filename: "GraphApp.h",label: "DFS"}), (b:cVariable {filename: "GraphApp.cc",label: "srcID"})         
MERGE (a)->[:write {condition: "kWeighted /\ kUndirected"}]->(b)                   
MATCH (a:cFunction {filename: "GraphApp.h",label: "DFS"}), (b:cVariable {filename: "GraphApp.cc",label: "next"})          
MERGE (a)->[:write {condition: "kWeighted /\ kUndirected"}]->(b)                   
MATCH (a:cFunction {filename: "GraphApp.h",label: "GraphApp"}), (b:cVariable {filename: "GraphApp.cc",label: "configFile"})    
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "GraphApp"}), (b:cVariable {filename: "GraphApp.h",label: "graphFilename"})  
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "GraphApp"}), (b:cVariable {filename: "GraphApp.h",label: "configFile"})     
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "GraphApp"}), (b:cFunction {filename: "GraphApp.h",label: "loadGraph"})      
MERGE (a)->[:call {condition: "true"}]->(b)                                        
MATCH (a:cFunction {filename: "GraphApp.h",label: "GraphApp"}), (b:cFunction {filename: "GraphApp.h",label: "setupMenu"})      
MERGE (a)->[:call {condition: "true"}]->(b)                                        
MATCH (a:cFunction {filename: "GraphApp.h",label: "GraphApp"}), (b:cFunction {filename: "GraphApp.h",label: "loadConfig"})     
MERGE (a)->[:call {condition: "true"}]->(b)                                        
MATCH (a:cFunction {filename: "GraphApp.h",label: "MSTPrim"}), (b:cVariable {filename: "GraphApp.cc",label: "count"})         
MERGE (a)->[:contain {condition: "kWeighted /\ kUndirected"}]->(b)                 
MATCH (a:cFunction {filename: "GraphApp.h",label: "MSTPrim"}), (b:cVariable {filename: "GraphApp.cc",label: "minIndex"})      
MERGE (a)->[:contain {condition: "kWeighted /\ kUndirected"}]->(b)                 
MATCH (a:cFunction {filename: "GraphApp.h",label: "MSTPrim"}), (b:cVariable {filename: "GraphApp.cc",label: "currNodeID"})    
MERGE (a)->[:contain {condition: "kWeighted /\ kUndirected"}]->(b)                 
MATCH (a:cFunction {filename: "GraphApp.h",label: "MSTPrim"}), (b:cVariable {filename: "GraphApp.cc",label: "MST"})           
MERGE (a)->[:contain {condition: "kWeighted /\ kUndirected"}]->(b)                 
MATCH (a:cFunction {filename: "GraphApp.h",label: "MSTPrim"}), (b:cVariable {filename: "GraphApp.cc",label: "minEdge"})       
MERGE (a)->[:contain {condition: "kWeighted /\ kUndirected"}]->(b)                 
MATCH (a:cFunction {filename: "GraphApp.h",label: "MSTPrim"}), (b:cVariable {filename: "GraphApp.cc",label: "next"})          
MERGE (a)->[:contain {condition: "kWeighted /\ kUndirected"}]->(b)                 
MATCH (a:cFunction {filename: "GraphApp.h",label: "MSTPrim"}), (b:cVariable {filename: "GraphApp.cc",label: "edge"})          
MERGE (a)->[:contain {condition: "kWeighted /\ kUndirected"}]->(b)                 
MATCH (a:cFunction {filename: "GraphApp.h",label: "MSTPrim"}), (b:cVariable {filename: "GraphApp.cc",label: "i"})             
MERGE (a)->[:contain {condition: "kWeighted /\ kUndirected"}]->(b)                 
MATCH (a:cFunction {filename: "GraphApp.h",label: "MSTPrim"}), (b:cVariable {filename: "GraphApp.cc",label: "node"})          
MERGE (a)->[:contain {condition: "kWeighted /\ kUndirected"}]->(b)                 
MATCH (a:cFunction {filename: "GraphApp.h",label: "MSTPrim"}), (b:cVariable {filename: "GraphApp.cc",label: "total"})         
MERGE (a)->[:contain {condition: "kWeighted /\ kUndirected"}]->(b)                 
MATCH (a:cFunction {filename: "GraphApp.h",label: "MSTPrim"}), (b:cVariable {filename: "GraphApp.cc",label: "min"})           
MERGE (a)->[:contain {condition: "kWeighted /\ kUndirected"}]->(b)                 
MATCH (a:cFunction {filename: "GraphApp.h",label: "MSTPrim"}), (b:cFunction {filename: "Edge.h",label: "getWeight"})          
MERGE (a)->[:call {condition: "kWeighted /\ kUndirected"}]->(b)                    
MATCH (a:cFunction {filename: "GraphApp.h",label: "MSTPrim"}), (b:cFunction {filename: "GraphApp.h",label: "clearVisited"})   
MERGE (a)->[:call {condition: "kWeighted /\ kUndirected"}]->(b)                    
MATCH (a:cFunction {filename: "GraphApp.h",label: "MSTPrim"}), (b:cFunction {filename: "Edge.h",label: "getTargetID"})        
MERGE (a)->[:call {condition: "kWeighted /\ kUndirected"}]->(b)                    
MATCH (a:cFunction {filename: "GraphApp.h",label: "MSTPrim"}), (b:cFunction {filename: "Node.h",label: "getValue"})           
MERGE (a)->[:call {condition: "kWeighted /\ kUndirected"}]->(b)                    
MATCH (a:cFunction {filename: "GraphApp.h",label: "MSTPrim"}), (b:cFunction {filename: "Node.h",label: "setValue"})           
MERGE (a)->[:call {condition: "kWeighted /\ kUndirected"}]->(b)                    
MATCH (a:cFunction {filename: "GraphApp.h",label: "MSTPrim"}), (b:cFunction {filename: "Edge.h",label: "getSrcID"})           
MERGE (a)->[:call {condition: "kWeighted /\ kUndirected"}]->(b)                    
MATCH (a:cFunction {filename: "GraphApp.h",label: "MSTPrim"}), (b:cFunction {filename: "Node.h",label: "getName"})            
MERGE (a)->[:call {condition: "kWeighted /\ kUndirected"}]->(b)                    
MATCH (a:cFunction {filename: "GraphApp.h",label: "MSTPrim"}), (b:cFunction {filename: "Node.h",label: "getID"})              
MERGE (a)->[:call {condition: "kWeighted /\ kUndirected"}]->(b)                    
MATCH (a:cFunction {filename: "GraphApp.h",label: "MSTPrim"}), (b:cFunction {filename: "Edge.h",label: "getNext"})            
MERGE (a)->[:call {condition: "kWeighted /\ kUndirected"}]->(b)                    
MATCH (a:cFunction {filename: "GraphApp.h",label: "MSTPrim"}), (b:cVariable {filename: "GraphApp.cc",label: "minIndex"})      
MERGE (a)->[:write {condition: "kWeighted /\ kUndirected"}]->(b)                   
MATCH (a:cFunction {filename: "GraphApp.h",label: "MSTPrim"}), (b:cVariable {filename: "GraphApp.cc",label: "node"})          
MERGE (a)->[:write {condition: "kWeighted /\ kUndirected"}]->(b)                   
MATCH (a:cFunction {filename: "GraphApp.h",label: "MSTPrim"}), (b:cVariable {filename: "GraphApp.cc",label: "total"})         
MERGE (a)->[:write {condition: "kWeighted /\ kUndirected"}]->(b)                   
MATCH (a:cFunction {filename: "GraphApp.h",label: "MSTPrim"}), (b:cVariable {filename: "GraphApp.cc",label: "next"})          
MERGE (a)->[:write {condition: "kWeighted /\ kUndirected"}]->(b)                   
MATCH (a:cFunction {filename: "GraphApp.h",label: "MSTPrim"}), (b:cVariable {filename: "GraphApp.cc",label: "min"})           
MERGE (a)->[:write {condition: "kWeighted /\ kUndirected"}]->(b)                   
MATCH (a:cFunction {filename: "GraphApp.h",label: "MSTPrim"}), (b:cVariable {filename: "GraphApp.cc",label: "minEdge"})       
MERGE (a)->[:write {condition: "kWeighted /\ kUndirected"}]->(b)                   
MATCH (a:cFunction {filename: "GraphApp.h",label: "MSTPrim"}), (b:cVariable {filename: "GraphApp.cc",label: "edge"})          
MERGE (a)->[:write {condition: "kWeighted /\ kUndirected"}]->(b)                   
MATCH (a:cFunction {filename: "GraphApp.h",label: "MSTPrim"}), (b:cVariable {filename: "GraphApp.cc",label: "count"})         
MERGE (a)->[:write {condition: "kWeighted /\ kUndirected"}]->(b)                   
MATCH (a:cFunction {filename: "GraphApp.h",label: "MSTPrim"}), (b:cVariable {filename: "GraphApp.cc",label: "MST"})           
MERGE (a)->[:write {condition: "kWeighted /\ kUndirected"}]->(b)                   
MATCH (a:cFunction {filename: "GraphApp.h",label: "MSTPrim"}), (b:cVariable {filename: "GraphApp.cc",label: "i"})             
MERGE (a)->[:write {condition: "kWeighted /\ kUndirected"}]->(b)                   
MATCH (a:cFunction {filename: "GraphApp.h",label: "MSTPrim"}), (b:cVariable {filename: "GraphApp.cc",label: "currNodeID"})    
MERGE (a)->[:write {condition: "kWeighted /\ kUndirected"}]->(b)                   
MATCH (a:cFunction {filename: "GraphApp.h",label: "addEdge"}), (b:cVariable {filename: "GraphApp.cc",label: "srcName"})       
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "addEdge"}), (b:cVariable {filename: "GraphApp.cc",label: "n1"})            
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "addEdge"}), (b:cVariable {filename: "GraphApp.h",label: "source"})         
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "addEdge"}), (b:cVariable {filename: "GraphApp.cc",label: "targetName"})    
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "addEdge"}), (b:cVariable {filename: "GraphApp.cc",label: "n2"})            
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "addEdge"}), (b:cVariable {filename: "GraphApp.cc",label: "newNode"})       
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "addEdge"}), (b:cVariable {filename: "GraphApp.h",label: "target"})         
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "addEdge"}), (b:cFunction {filename: "Node.h",label: "getName"})            
MERGE (a)->[:call {condition: "true"}]->(b)                                        
MATCH (a:cFunction {filename: "GraphApp.h",label: "addEdge"}), (b:cFunction {filename: "Node.h",label: "addNgbr"})            
MERGE (a)->[:call {condition: "!kWeighted /\ kUndirected"}]->(b)                   
MATCH (a:cFunction {filename: "GraphApp.h",label: "addEdge"}), (b:cFunction {filename: "Node.h",label: "getID"})              
MERGE (a)->[:call {condition: "!kWeighted /\ kUndirected"}]->(b)                   
MATCH (a:cFunction {filename: "GraphApp.h",label: "addEdge"}), (b:cFunction {filename: "GraphApp.h",label: "checkNode"})      
MERGE (a)->[:call {condition: "true"}]->(b)                                        
MATCH (a:cFunction {filename: "GraphApp.h",label: "addEdge"}), (b:cVariable {filename: "GraphApp.cc",label: "n2"})            
MERGE (a)->[:write {condition: "true"}]->(b)                                       
MATCH (a:cFunction {filename: "GraphApp.h",label: "addEdge"}), (b:cVariable {filename: "GraphApp.cc",label: "n1"})            
MERGE (a)->[:write {condition: "true"}]->(b)                                       
MATCH (a:cFunction {filename: "GraphApp.h",label: "addEdge"}), (b:cVariable {filename: "GraphApp.cc",label: "newNode"})       
MERGE (a)->[:write {condition: "true"}]->(b)                                       
MATCH (a:cFunction {filename: "GraphApp.h",label: "addEdge"}), (b:cVariable {filename: "GraphApp.cc",label: "n2"})            
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "addEdge"}), (b:cVariable {filename: "GraphApp.cc",label: "srcName"})       
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "addEdge"}), (b:cVariable {filename: "GraphApp.h",label: "weight"})         
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "addEdge"}), (b:cVariable {filename: "GraphApp.h",label: "source"})         
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "addEdge"}), (b:cVariable {filename: "GraphApp.cc",label: "edge"})          
MERGE (a)->[:contain {condition: "kWeighted"}]->(b)                                
MATCH (a:cFunction {filename: "GraphApp.h",label: "addEdge"}), (b:cVariable {filename: "GraphApp.cc",label: "targetName"})    
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "addEdge"}), (b:cVariable {filename: "GraphApp.cc",label: "n1"})            
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "addEdge"}), (b:cVariable {filename: "GraphApp.h",label: "target"})         
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "addEdge"}), (b:cVariable {filename: "GraphApp.cc",label: "newNode"})       
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "addEdge"}), (b:cFunction {filename: "GraphApp.h",label: "checkNode"})      
MERGE (a)->[:call {condition: "true"}]->(b)                                        
MATCH (a:cFunction {filename: "GraphApp.h",label: "addEdge"}), (b:cFunction {filename: "Node.h",label: "getName"})            
MERGE (a)->[:call {condition: "true"}]->(b)                                        
MATCH (a:cFunction {filename: "GraphApp.h",label: "addEdge"}), (b:cFunction {filename: "Node.h",label: "getID"})              
MERGE (a)->[:call {condition: "kWeighted /\ kUndirected"}]->(b)                    
MATCH (a:cFunction {filename: "GraphApp.h",label: "addEdge"}), (b:cVariable {filename: "GraphApp.cc",label: "n1"})            
MERGE (a)->[:write {condition: "true"}]->(b)                                       
MATCH (a:cFunction {filename: "GraphApp.h",label: "addEdge"}), (b:cVariable {filename: "GraphApp.cc",label: "newNode"})       
MERGE (a)->[:write {condition: "true"}]->(b)                                       
MATCH (a:cFunction {filename: "GraphApp.h",label: "addEdge"}), (b:cVariable {filename: "GraphApp.cc",label: "edge"})          
MERGE (a)->[:write {condition: "kWeighted"}]->(b)                                  
MATCH (a:cFunction {filename: "GraphApp.h",label: "addEdge"}), (b:cVariable {filename: "GraphApp.cc",label: "n2"})            
MERGE (a)->[:write {condition: "true"}]->(b)                                       
MATCH (a:cFunction {filename: "GraphApp.h",label: "addNode"}), (b:cVariable {filename: "GraphApp.h",label: "nodeName"})       
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "addNode"}), (b:cVariable {filename: "GraphApp.cc",label: "newNode"})       
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "addNode"}), (b:cFunction {filename: "GraphApp.h",label: "checkNode"})      
MERGE (a)->[:call {condition: "true"}]->(b)                                        
MATCH (a:cFunction {filename: "GraphApp.h",label: "addNode"}), (b:cVariable {filename: "GraphApp.cc",label: "newNode"})       
MERGE (a)->[:write {condition: "true"}]->(b)                                       
MATCH (a:cFunction {filename: "GraphApp.h",label: "checkNode"}), (b:cVariable {filename: "GraphApp.h",label: "nodeName"})       
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "checkNode"}), (b:cVariable {filename: "GraphApp.cc",label: "i"})             
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "checkNode"}), (b:cFunction {filename: "Node.h",label: "getName"})            
MERGE (a)->[:call {condition: "true"}]->(b)                                        
MATCH (a:cFunction {filename: "GraphApp.h",label: "checkNode"}), (b:cVariable {filename: "GraphApp.cc",label: "i"})             
MERGE (a)->[:write {condition: "true"}]->(b)                                       
MATCH (a:cFunction {filename: "GraphApp.h",label: "clearVisited"}), (b:cVariable {filename: "GraphApp.cc",label: "node"})          
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "clearVisited"}), (b:cFunction {filename: "Node.h",label: "getID"})              
MERGE (a)->[:call {condition: "true"}]->(b)                                        
MATCH (a:cFunction {filename: "GraphApp.h",label: "clearVisited"}), (b:cVariable {filename: "GraphApp.cc",label: "node"})          
MERGE (a)->[:write {condition: "true"}]->(b)                                       
MATCH (a:cFunction {filename: "GraphApp.h",label: "conComps"}), (b:cVariable {filename: "GraphApp.cc",label: "compNum"})       
MERGE (a)->[:contain {condition: "(kBFS \/ kDFS) /\ kUndirected"}]->(b)            
MATCH (a:cFunction {filename: "GraphApp.h",label: "conComps"}), (b:cVariable {filename: "GraphApp.cc",label: "node"})          
MERGE (a)->[:contain {condition: "(kBFS \/ kDFS) /\ kUndirected"}]->(b)            
MATCH (a:cFunction {filename: "GraphApp.h",label: "conComps"}), (b:cFunction {filename: "GraphApp.h",label: "clearVisited"})   
MERGE (a)->[:call {condition: "(kBFS \/ kDFS) /\ kUndirected"}]->(b)               
MATCH (a:cFunction {filename: "GraphApp.h",label: "conComps"}), (b:cFunction {filename: "GraphApp.h",label: "BFS"})            
MERGE (a)->[:call {condition: "kBFS /\ kUndirected"}]->(b)                         
MATCH (a:cFunction {filename: "GraphApp.h",label: "conComps"}), (b:cFunction {filename: "Node.h",label: "getID"})              
MERGE (a)->[:call {condition: "(kBFS \/ kDFS) /\ kUndirected"}]->(b)               
MATCH (a:cFunction {filename: "GraphApp.h",label: "conComps"}), (b:cFunction {filename: "GraphApp.h",label: "DFS"})            
MERGE (a)->[:call {condition: "kDFS /\ kUndirected"}]->(b)                         
MATCH (a:cFunction {filename: "GraphApp.h",label: "conComps"}), (b:cVariable {filename: "GraphApp.cc",label: "node"})          
MERGE (a)->[:write {condition: "(kBFS \/ kDFS) /\ kUndirected"}]->(b)              
MATCH (a:cFunction {filename: "GraphApp.h",label: "conComps"}), (b:cVariable {filename: "GraphApp.cc",label: "compNum"})       
MERGE (a)->[:write {condition: "(kBFS \/ kDFS) /\ kUndirected"}]->(b)              
MATCH (a:cFunction {filename: "GraphApp.h",label: "execComnd"}), (b:cVariable {filename: "GraphApp.cc",label: "currName"})      
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "execComnd"}), (b:cVariable {filename: "GraphApp.cc",label: "newNodeName"})   
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "execComnd"}), (b:cVariable {filename: "GraphApp.cc",label: "srcName"})       
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "execComnd"}), (b:cVariable {filename: "GraphApp.cc",label: "nodeName"})      
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "execComnd"}), (b:cVariable {filename: "GraphApp.cc",label: "weight"})        
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "execComnd"}), (b:cVariable {filename: "GraphApp.cc",label: "targetName"})    
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "execComnd"}), (b:cVariable {filename: "GraphApp.cc",label: "command"})       
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "execComnd"}), (b:cVariable {filename: "GraphApp.cc",label: "iterate"})       
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "execComnd"}), (b:cFunction {filename: "GraphApp.h",label: "updateName"})     
MERGE (a)->[:call {condition: "true"}]->(b)                                        
MATCH (a:cFunction {filename: "GraphApp.h",label: "execComnd"}), (b:cFunction {filename: "GraphApp.h",label: "updateWeight"})   
MERGE (a)->[:call {condition: "kWeighted"}]->(b)                                   
MATCH (a:cFunction {filename: "GraphApp.h",label: "execComnd"}), (b:cFunction {filename: "GraphApp.h",label: "printHeader"})    
MERGE (a)->[:call {condition: "true"}]->(b)                                        
MATCH (a:cFunction {filename: "GraphApp.h",label: "execComnd"}), (b:cFunction {filename: "GraphApp.h",label: "addNode"})        
MERGE (a)->[:call {condition: "true"}]->(b)                                        
MATCH (a:cFunction {filename: "GraphApp.h",label: "execComnd"}), (b:cFunction {filename: "GraphApp.h",label: "addEdge"})        
MERGE (a)->[:call {condition: "kWeighted"}]->(b)                                   
MATCH (a:cFunction {filename: "GraphApp.h",label: "execComnd"}), (b:cFunction {filename: "GraphApp.h",label: "addEdge"})        
MERGE (a)->[:call {condition: "!kWeighted"}]->(b)                                  
MATCH (a:cFunction {filename: "GraphApp.h",label: "execComnd"}), (b:cFunction {filename: "GraphApp.h",label: "printEdges"})     
MERGE (a)->[:call {condition: "kWeighted"}]->(b)                                   
MATCH (a:cFunction {filename: "GraphApp.h",label: "execComnd"}), (b:cFunction {filename: "GraphApp.h",label: "isCyclic"})       
MERGE (a)->[:call {condition: "kCycle"}]->(b)                                      
MATCH (a:cFunction {filename: "GraphApp.h",label: "execComnd"}), (b:cFunction {filename: "GraphApp.h",label: "conComps"})       
MERGE (a)->[:call {condition: "kConnectedComps"}]->(b)                             
MATCH (a:cFunction {filename: "GraphApp.h",label: "execComnd"}), (b:cFunction {filename: "GraphApp.h",label: "MSTPrim"})        
MERGE (a)->[:call {condition: "kPrim"}]->(b)                                       
MATCH (a:cFunction {filename: "GraphApp.h",label: "execComnd"}), (b:cFunction {filename: "GraphApp.h",label: "printNgbrs"})     
MERGE (a)->[:call {condition: "!kWeighted"}]->(b)                                  
MATCH (a:cFunction {filename: "GraphApp.h",label: "execComnd"}), (b:cVariable {filename: "GraphApp.cc",label: "nodeName"})      
MERGE (a)->[:write {condition: "true"}]->(b)                                       
MATCH (a:cFunction {filename: "GraphApp.h",label: "execComnd"}), (b:cVariable {filename: "GraphApp.cc",label: "srcName"})       
MERGE (a)->[:write {condition: "true"}]->(b)                                       
MATCH (a:cFunction {filename: "GraphApp.h",label: "execComnd"}), (b:cVariable {filename: "GraphApp.cc",label: "currName"})      
MERGE (a)->[:write {condition: "true"}]->(b)                                       
MATCH (a:cFunction {filename: "GraphApp.h",label: "execComnd"}), (b:cVariable {filename: "GraphApp.cc",label: "command"})       
MERGE (a)->[:write {condition: "true"}]->(b)                                       
MATCH (a:cFunction {filename: "GraphApp.h",label: "execComnd"}), (b:cVariable {filename: "GraphApp.cc",label: "targetName"})    
MERGE (a)->[:write {condition: "true"}]->(b)                                       
MATCH (a:cFunction {filename: "GraphApp.h",label: "execComnd"}), (b:cVariable {filename: "GraphApp.cc",label: "newNodeName"})   
MERGE (a)->[:write {condition: "true"}]->(b)                                       
MATCH (a:cFunction {filename: "GraphApp.h",label: "execComnd"}), (b:cVariable {filename: "GraphApp.cc",label: "iterate"})       
MERGE (a)->[:write {condition: "true"}]->(b)                                       
MATCH (a:cFunction {filename: "GraphApp.h",label: "isCyclic"}), (b:cVariable {filename: "GraphApp.cc",label: "node"})          
MERGE (a)->[:contain {condition: "kDFS"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "isCyclic"}), (b:cFunction {filename: "Node.h",label: "getID"})              
MERGE (a)->[:call {condition: "kDFS"}]->(b)                                        
MATCH (a:cFunction {filename: "GraphApp.h",label: "isCyclic"}), (b:cFunction {filename: "GraphApp.h",label: "DFS"})            
MERGE (a)->[:call {condition: "kDFS"}]->(b)                                        
MATCH (a:cFunction {filename: "GraphApp.h",label: "isCyclic"}), (b:cFunction {filename: "GraphApp.h",label: "clearVisited"})   
MERGE (a)->[:call {condition: "kDFS"}]->(b)                                        
MATCH (a:cFunction {filename: "GraphApp.h",label: "isCyclic"}), (b:cVariable {filename: "GraphApp.cc",label: "node"})          
MERGE (a)->[:write {condition: "kDFS"}]->(b)                                       
MATCH (a:cFunction {filename: "GraphApp.h",label: "loadConfig"}), (b:cVariable {filename: "GraphApp.cc",label: "ss"})            
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "loadConfig"}), (b:cVariable {filename: "GraphApp.cc",label: "line"})          
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "loadConfig"}), (b:cVariable {filename: "GraphApp.cc",label: "vect"})          
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "loadConfig"}), (b:cVariable {filename: "GraphApp.h",label: "filename"})       
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "loadConfig"}), (b:cVariable {filename: "GraphApp.cc",label: "configFile"})    
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "loadConfig"}), (b:cVariable {filename: "GraphApp.cc",label: "toggleValue"})   
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "loadConfig"}), (b:cVariable {filename: "GraphApp.cc",label: "configFile"})    
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "loadConfig"}), (b:cVariable {filename: "GraphApp.cc",label: "feature"})       
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "loadConfig"}), (b:cVariable {filename: "GraphApp.cc",label: "i"})             
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "loadConfig"}), (b:cVariable {filename: "GraphApp.cc",label: "toggleValue"})   
MERGE (a)->[:write {condition: "true"}]->(b)                                       
MATCH (a:cFunction {filename: "GraphApp.h",label: "loadConfig"}), (b:cVariable {filename: "GraphApp.h",label: "kCycle"})         
MERGE (a)->[:write {condition: "true"}]->(b)                                       
MATCH (a:cFunction {filename: "GraphApp.h",label: "loadConfig"}), (b:cVariable {filename: "GraphApp.h",label: "kConnectedComps"})
MERGE (a)->[:write {condition: "true"}]->(b)                                       
MATCH (a:cFunction {filename: "GraphApp.h",label: "loadConfig"}), (b:cVariable {filename: "GraphApp.h",label: "kBFS"})           
MERGE (a)->[:write {condition: "true"}]->(b)                                       
MATCH (a:cFunction {filename: "GraphApp.h",label: "loadConfig"}), (b:cVariable {filename: "GraphApp.cc",label: "i"})             
MERGE (a)->[:write {condition: "true"}]->(b)                                       
MATCH (a:cFunction {filename: "GraphApp.h",label: "loadConfig"}), (b:cVariable {filename: "GraphApp.cc",label: "configFile"})    
MERGE (a)->[:write {condition: "true"}]->(b)                                       
MATCH (a:cFunction {filename: "GraphApp.h",label: "loadConfig"}), (b:cVariable {filename: "GraphApp.cc",label: "vect"})          
MERGE (a)->[:write {condition: "true"}]->(b)                                       
MATCH (a:cFunction {filename: "GraphApp.h",label: "loadConfig"}), (b:cVariable {filename: "GraphApp.h",label: "kPrim"})          
MERGE (a)->[:write {condition: "true"}]->(b)                                       
MATCH (a:cFunction {filename: "GraphApp.h",label: "loadConfig"}), (b:cVariable {filename: "GraphApp.h",label: "kUndirected"})    
MERGE (a)->[:write {condition: "true"}]->(b)                                       
MATCH (a:cFunction {filename: "GraphApp.h",label: "loadConfig"}), (b:cVariable {filename: "GraphApp.cc",label: "ss"})            
MERGE (a)->[:write {condition: "true"}]->(b)                                       
MATCH (a:cFunction {filename: "GraphApp.h",label: "loadConfig"}), (b:cVariable {filename: "GraphApp.cc",label: "feature"})       
MERGE (a)->[:write {condition: "true"}]->(b)                                       
MATCH (a:cFunction {filename: "GraphApp.h",label: "loadConfig"}), (b:cVariable {filename: "GraphApp.cc",label: "line"})          
MERGE (a)->[:write {condition: "true"}]->(b)                                       
MATCH (a:cFunction {filename: "GraphApp.h",label: "loadConfig"}), (b:cVariable {filename: "GraphApp.h",label: "kDFS"})           
MERGE (a)->[:write {condition: "true"}]->(b)                                       
MATCH (a:cFunction {filename: "GraphApp.h",label: "loadConfig"}), (b:cVariable {filename: "GraphApp.h",label: "kDirected"})      
MERGE (a)->[:write {condition: "true"}]->(b)                                       
MATCH (a:cFunction {filename: "GraphApp.h",label: "loadConfig"}), (b:cVariable {filename: "GraphApp.h",label: "kWeighted"})      
MERGE (a)->[:write {condition: "true"}]->(b)                                       
MATCH (a:cFunction {filename: "GraphApp.h",label: "loadConfig"}), (b:cVariable {filename: "GraphApp.h",label: "kSearch"})        
MERGE (a)->[:write {condition: "true"}]->(b)                                       
MATCH (a:cFunction {filename: "GraphApp.h",label: "loadGraph"}), (b:cVariable {filename: "GraphApp.cc",label: "target"})        
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "loadGraph"}), (b:cVariable {filename: "GraphApp.cc",label: "edgeCount"})     
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "loadGraph"}), (b:cVariable {filename: "GraphApp.cc",label: "edge"})          
MERGE (a)->[:contain {condition: "kWeighted"}]->(b)                                
MATCH (a:cFunction {filename: "GraphApp.h",label: "loadGraph"}), (b:cVariable {filename: "GraphApp.cc",label: "graphFile"})     
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "loadGraph"}), (b:cVariable {filename: "GraphApp.h",label: "filename"})       
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "loadGraph"}), (b:cVariable {filename: "GraphApp.cc",label: "ss"})            
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "loadGraph"}), (b:cVariable {filename: "GraphApp.cc",label: "weight"})        
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "loadGraph"}), (b:cVariable {filename: "GraphApp.cc",label: "lineElem"})      
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "loadGraph"}), (b:cVariable {filename: "GraphApp.cc",label: "line"})          
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "loadGraph"}), (b:cVariable {filename: "GraphApp.cc",label: "j"})             
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "loadGraph"}), (b:cVariable {filename: "GraphApp.cc",label: "source"})        
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "loadGraph"}), (b:cVariable {filename: "GraphApp.cc",label: "lineElems"})     
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "loadGraph"}), (b:cVariable {filename: "GraphApp.cc",label: "nodeCount"})     
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "loadGraph"}), (b:cVariable {filename: "GraphApp.cc",label: "graphFilename"}) 
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "loadGraph"}), (b:cVariable {filename: "GraphApp.cc",label: "newNode"})       
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "loadGraph"}), (b:cVariable {filename: "GraphApp.cc",label: "i"})             
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "loadGraph"}), (b:cVariable {filename: "GraphApp.cc",label: "lineElems"})     
MERGE (a)->[:write {condition: "true"}]->(b)                                       
MATCH (a:cFunction {filename: "GraphApp.h",label: "loadGraph"}), (b:cVariable {filename: "GraphApp.cc",label: "edgeCount"})     
MERGE (a)->[:write {condition: "true"}]->(b)                                       
MATCH (a:cFunction {filename: "GraphApp.h",label: "loadGraph"}), (b:cVariable {filename: "GraphApp.cc",label: "edge"})          
MERGE (a)->[:write {condition: "kWeighted"}]->(b)                                  
MATCH (a:cFunction {filename: "GraphApp.h",label: "loadGraph"}), (b:cVariable {filename: "GraphApp.cc",label: "ss"})            
MERGE (a)->[:write {condition: "true"}]->(b)                                       
MATCH (a:cFunction {filename: "GraphApp.h",label: "loadGraph"}), (b:cVariable {filename: "GraphApp.cc",label: "line"})          
MERGE (a)->[:write {condition: "true"}]->(b)                                       
MATCH (a:cFunction {filename: "GraphApp.h",label: "loadGraph"}), (b:cVariable {filename: "GraphApp.cc",label: "source"})        
MERGE (a)->[:write {condition: "true"}]->(b)                                       
MATCH (a:cFunction {filename: "GraphApp.h",label: "loadGraph"}), (b:cVariable {filename: "GraphApp.cc",label: "lineElem"})      
MERGE (a)->[:write {condition: "true"}]->(b)                                       
MATCH (a:cFunction {filename: "GraphApp.h",label: "loadGraph"}), (b:cVariable {filename: "GraphApp.cc",label: "weight"})        
MERGE (a)->[:write {condition: "kWeighted"}]->(b)                                  
MATCH (a:cFunction {filename: "GraphApp.h",label: "loadGraph"}), (b:cVariable {filename: "GraphApp.cc",label: "graphFile"})     
MERGE (a)->[:write {condition: "true"}]->(b)                                       
MATCH (a:cFunction {filename: "GraphApp.h",label: "loadGraph"}), (b:cVariable {filename: "GraphApp.cc",label: "nodeCount"})     
MERGE (a)->[:write {condition: "true"}]->(b)                                       
MATCH (a:cFunction {filename: "GraphApp.h",label: "loadGraph"}), (b:cVariable {filename: "GraphApp.cc",label: "i"})             
MERGE (a)->[:write {condition: "true"}]->(b)                                       
MATCH (a:cFunction {filename: "GraphApp.h",label: "loadGraph"}), (b:cVariable {filename: "GraphApp.cc",label: "newNode"})       
MERGE (a)->[:write {condition: "true"}]->(b)                                       
MATCH (a:cFunction {filename: "GraphApp.h",label: "loadGraph"}), (b:cVariable {filename: "GraphApp.cc",label: "target"})        
MERGE (a)->[:write {condition: "true"}]->(b)                                       
MATCH (a:cFunction {filename: "GraphApp.h",label: "loadGraph"}), (b:cVariable {filename: "GraphApp.cc",label: "j"})             
MERGE (a)->[:write {condition: "true"}]->(b)                                       
MATCH (a:cFunction {filename: "GraphApp.h",label: "loadGraph"}), (b:cFunction {filename: "Node.h",label: "addNgbr"})            
MERGE (a)->[:call {condition: "!kWeighted /\ kUndirected"}]->(b)                   
MATCH (a:cFunction {filename: "GraphApp.h",label: "loadGraph"}), (b:cFunction {filename: "Node.h",label: "getID"})              
MERGE (a)->[:call {condition: "kWeighted \/ kUndirected"}]->(b)                    
MATCH (a:cFunction {filename: "GraphApp.h",label: "loadGraph"}), (b:cFunction {filename: "Node.h",label: "getName"})            
MERGE (a)->[:call {condition: "true"}]->(b)                                        
MATCH (a:cFunction {filename: "GraphApp.h",label: "loadGraph"}), (b:cFunction {filename: "GraphApp.h",label: "checkNode"})      
MERGE (a)->[:call {condition: "true"}]->(b)                                        
MATCH (a:cFunction {filename: "GraphApp.h",label: "printEdges"}), (b:cVariable {filename: "GraphApp.cc",label: "i"})             
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "printEdges"}), (b:cVariable {filename: "GraphApp.cc",label: "edge"})          
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "printEdges"}), (b:cFunction {filename: "Node.h",label: "getName"})            
MERGE (a)->[:call {condition: "true"}]->(b)                                        
MATCH (a:cFunction {filename: "GraphApp.h",label: "printEdges"}), (b:cFunction {filename: "Edge.h",label: "getTargetID"})        
MERGE (a)->[:call {condition: "true"}]->(b)                                        
MATCH (a:cFunction {filename: "GraphApp.h",label: "printEdges"}), (b:cFunction {filename: "Edge.h",label: "getWeight"})          
MERGE (a)->[:call {condition: "true"}]->(b)                                        
MATCH (a:cFunction {filename: "GraphApp.h",label: "printEdges"}), (b:cFunction {filename: "Edge.h",label: "getSrcID"})           
MERGE (a)->[:call {condition: "true"}]->(b)                                        
MATCH (a:cFunction {filename: "GraphApp.h",label: "printEdges"}), (b:cVariable {filename: "GraphApp.cc",label: "i"})             
MERGE (a)->[:write {condition: "true"}]->(b)                                       
MATCH (a:cFunction {filename: "GraphApp.h",label: "printEdges"}), (b:cVariable {filename: "GraphApp.cc",label: "edge"})          
MERGE (a)->[:write {condition: "true"}]->(b)                                       
MATCH (a:cFunction {filename: "GraphApp.h",label: "printHeader"}), (b:cVariable {filename: "GraphApp.cc",label: "header"})        
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "printHeader"}), (b:cVariable {filename: "GraphApp.cc",label: "command"})       
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "printHeader"}), (b:cVariable {filename: "GraphApp.cc",label: "command"})       
MERGE (a)->[:write {condition: "true"}]->(b)                                       
MATCH (a:cFunction {filename: "GraphApp.h",label: "printHeader"}), (b:cVariable {filename: "GraphApp.cc",label: "header"})        
MERGE (a)->[:write {condition: "true"}]->(b)                                       
MATCH (a:cFunction {filename: "GraphApp.h",label: "printNgbrs"}), (b:cVariable {filename: "GraphApp.cc",label: "node"})          
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "printNgbrs"}), (b:cVariable {filename: "GraphApp.cc",label: "neighbor"})      
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "printNgbrs"}), (b:cFunction {filename: "Node.h",label: "getName"})            
MERGE (a)->[:call {condition: "true"}]->(b)                                        
MATCH (a:cFunction {filename: "GraphApp.h",label: "printNgbrs"}), (b:cFunction {filename: "Node.h",label: "getNgbrs"})           
MERGE (a)->[:call {condition: "true"}]->(b)                                        
MATCH (a:cFunction {filename: "GraphApp.h",label: "printNgbrs"}), (b:cVariable {filename: "GraphApp.cc",label: "node"})          
MERGE (a)->[:write {condition: "true"}]->(b)                                       
MATCH (a:cFunction {filename: "GraphApp.h",label: "printNgbrs"}), (b:cVariable {filename: "GraphApp.cc",label: "neighbor"})      
MERGE (a)->[:write {condition: "true"}]->(b)                                       
MATCH (a:cFunction {filename: "GraphApp.h",label: "updateWeight"}), (b:cVariable {filename: "GraphApp.cc",label: "srcName"})       
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "updateWeight"}), (b:cVariable {filename: "GraphApp.h",label: "source"})         
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "updateWeight"}), (b:cVariable {filename: "GraphApp.h",label: "newWeight"})      
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "updateWeight"}), (b:cVariable {filename: "GraphApp.cc",label: "i"})             
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "updateWeight"}), (b:cVariable {filename: "GraphApp.cc",label: "srcID"})         
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "updateWeight"}), (b:cVariable {filename: "GraphApp.h",label: "target"})         
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "updateWeight"}), (b:cVariable {filename: "GraphApp.cc",label: "targetName"})    
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "updateWeight"}), (b:cVariable {filename: "GraphApp.cc",label: "targetID"})      
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "updateWeight"}), (b:cFunction {filename: "Node.h",label: "getName"})            
MERGE (a)->[:call {condition: "true"}]->(b)                                        
MATCH (a:cFunction {filename: "GraphApp.h",label: "updateWeight"}), (b:cFunction {filename: "Node.h",label: "getID"})              
MERGE (a)->[:call {condition: "true"}]->(b)                                        
MATCH (a:cFunction {filename: "GraphApp.h",label: "updateWeight"}), (b:cFunction {filename: "Edge.h",label: "getSrcID"})           
MERGE (a)->[:call {condition: "kUndirected"}]->(b)                                 
MATCH (a:cFunction {filename: "GraphApp.h",label: "updateWeight"}), (b:cFunction {filename: "Edge.h",label: "getTargetID"})        
MERGE (a)->[:call {condition: "true"}]->(b)                                        
MATCH (a:cFunction {filename: "GraphApp.h",label: "updateWeight"}), (b:cVariable {filename: "GraphApp.cc",label: "targetID"})      
MERGE (a)->[:write {condition: "true"}]->(b)                                       
MATCH (a:cFunction {filename: "GraphApp.h",label: "updateWeight"}), (b:cVariable {filename: "GraphApp.cc",label: "srcID"})         
MERGE (a)->[:write {condition: "true"}]->(b)                                       
MATCH (a:cFunction {filename: "GraphApp.h",label: "updateWeight"}), (b:cVariable {filename: "GraphApp.cc",label: "i"})             
MERGE (a)->[:write {condition: "true"}]->(b)                                       
MATCH (a:cFunction {filename: "GraphApp.h",label: "updateWeight"}), (b:cVariable {filename: "Edge.h",label: "weight"})             
MERGE (a)->[:write {condition: "true"}]->(b)                                       
MATCH (a:cFunction {filename: "GraphApp.h",label: "updateName"}), (b:cVariable {filename: "GraphApp.h",label: "nodeName"})       
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "updateName"}), (b:cVariable {filename: "GraphApp.h",label: "newName"})        
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "updateName"}), (b:cVariable {filename: "GraphApp.cc",label: "i"})             
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "updateName"}), (b:cFunction {filename: "Node.h",label: "getName"})            
MERGE (a)->[:call {condition: "true"}]->(b)                                        
MATCH (a:cFunction {filename: "GraphApp.h",label: "updateName"}), (b:cFunction {filename: "Node.h",label: "setName"})            
MERGE (a)->[:call {condition: "true"}]->(b)                                        
MATCH (a:cFunction {filename: "GraphApp.h",label: "updateName"}), (b:cVariable {filename: "GraphApp.cc",label: "i"})             
MERGE (a)->[:write {condition: "true"}]->(b)                                       
MATCH (a:cFunction {filename: "GraphApp.h",label: "~GraphApp"}), (b:cVariable {filename: "GraphApp.cc",label: "i"})             
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "GraphApp.h",label: "~GraphApp"}), (b:cVariable {filename: "GraphApp.cc",label: "i"})             
MERGE (a)->[:write {condition: "true"}]->(b)                                       
MATCH (a:cFunction {filename: "Node.h",label: "Node"}), (b:cVariable {filename: "Node.h",label: "nodeName"})           
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "Node.h",label: "Node"}), (b:cVariable {filename: "Node.h",label: "id"})                 
MERGE (a)->[:write {condition: "true"}]->(b)                                       
MATCH (a:cFunction {filename: "Node.h",label: "Node"}), (b:cVariable {filename: "Node.h",label: "nodeCount"})          
MERGE (a)->[:write {condition: "true"}]->(b)                                       
MATCH (a:cFunction {filename: "Node.h",label: "addNgbr"}), (b:cVariable {filename: "Node.h",label: "neighborID"})         
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "Node.h",label: "setName"}), (b:cVariable {filename: "Node.h",label: "newName"})            
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "Node.h",label: "setValue"}), (b:cVariable {filename: "Node.h",label: "newValue"})           
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "Node.h",label: "setValue"}), (b:cVariable {filename: "Node.h",label: "value"})              
MERGE (a)->[:write {condition: "true"}]->(b)                                       
MATCH (a:cFunction {filename: "main.cc",label: "main"}), (b:cVariable {filename: "main.cc",label: "graphApp"})          
MERGE (a)->[:contain {condition: "true"}]->(b)                                     
MATCH (a:cFunction {filename: "main.cc",label: "main"}), (b:cFunction {filename: "GraphApp.h",label: "execComnd"})      
MERGE (a)->[:call {condition: "true"}]->(b)                                        
MATCH (a:cFunction {filename: "main.cc",label: "main"}), (b:cVariable {filename: "main.cc",label: "graphApp"})          
MERGE (a)->[:write {condition: "true"}]->(b)                                       
MATCH (a:cVariable {filename: "Edge.h",label: "edgeCount"}), (b:cFunction {filename: "Edge.h",label: "Edge"})               
MERGE (a)->[:read {condition: "true"}]->(b)                                        
MATCH (a:cVariable {filename: "Edge.h",label: "edgeCount"}), (b:cVariable {filename: "Edge.h",label: "edgeID"})             
MERGE (a)->[:varWrite {condition: "true"}]->(b)                                    
MATCH (a:cVariable {filename: "Edge.h",label: "targetID"}), (b:cFunction {filename: "Edge.h",label: "getNext"})            
MERGE (a)->[:read {condition: "true"}]->(b)                                        
MATCH (a:cVariable {filename: "Edge.h",label: "currNodeID"}), (b:cFunction {filename: "Edge.h",label: "getNext"})            
MERGE (a)->[:read {condition: "true"}]->(b)                                        
MATCH (a:cVariable {filename: "Edge.h",label: "srcID"}), (b:cFunction {filename: "Edge.h",label: "getNext"})            
MERGE (a)->[:read {condition: "true"}]->(b)                                        
MATCH (a:cVariable {filename: "GraphApp.h",label: "ADDNODE"}), (b:cFunction {filename: "GraphApp.h",label: "addNode"})        
MERGE (a)->[:varInfFunc {condition: "true"}]->(b)                                  
MATCH (a:cVariable {filename: "GraphApp.cc",label: "targetID"}), (b:cFunction {filename: "GraphApp.h",label: "BFS"})            
MERGE (a)->[:read {condition: "kWeighted /\ kUndirected"}]->(b)                    
MATCH (a:cVariable {filename: "GraphApp.h",label: "nodeID"}), (b:cFunction {filename: "GraphApp.h",label: "BFS"})            
MERGE (a)->[:read {condition: "kWeighted /\ kUndirected"}]->(b)                    
MATCH (a:cVariable {filename: "GraphApp.h",label: "nodeID"}), (b:cVariable {filename: "GraphApp.cc",label: "queue"})         
MERGE (a)->[:varWrite {condition: "true"}]->(b)                                    
MATCH (a:cVariable {filename: "GraphApp.cc",label: "srcID"}), (b:cFunction {filename: "GraphApp.h",label: "BFS"})            
MERGE (a)->[:read {condition: "kWeighted /\ kUndirected"}]->(b)                    
MATCH (a:cVariable {filename: "GraphApp.h",label: "CYCLE"}), (b:cVariable {filename: "GraphApp.h",label: "activeCommds"})   
MERGE (a)->[:varWrite {condition: "kCycle"}]->(b)                                  
MATCH (a:cVariable {filename: "GraphApp.h",label: "CYCLE"}), (b:cFunction {filename: "GraphApp.h",label: "DFS"})            
MERGE (a)->[:varInfFunc {condition: "kWeighted /\ !kUndirected"}]->(b)             
MATCH (a:cVariable {filename: "GraphApp.cc",label: "targetID"}), (b:cFunction {filename: "GraphApp.h",label: "DFS"})            
MERGE (a)->[:read {condition: "kWeighted /\ kUndirected"}]->(b)                    
MATCH (a:cVariable {filename: "GraphApp.cc",label: "targetID"}), (b:cVariable {filename: "GraphApp.h",label: "nodeID"})         
MERGE (a)->[:varWrite {condition: "kWeighted /\ !kUndirected"}]->(b)               
MATCH (a:cVariable {filename: "GraphApp.cc",label: "targetID"}), (b:cVariable {filename: "GraphApp.cc",label: "next"})          
MERGE (a)->[:varWrite {condition: "kWeighted /\ kUndirected"}]->(b)                
MATCH (a:cVariable {filename: "GraphApp.cc",label: "targetID"}), (b:cFunction {filename: "GraphApp.h",label: "DFS"})            
MERGE (a)->[:varInfFunc {condition: "kWeighted /\ !kUndirected"}]->(b)             
MATCH (a:cVariable {filename: "GraphApp.cc",label: "neighborID"}), (b:cFunction {filename: "GraphApp.h",label: "DFS"})            
MERGE (a)->[:read {condition: "!kWeighted /\ kUndirected"}]->(b)                   
MATCH (a:cVariable {filename: "GraphApp.cc",label: "next"}), (b:cFunction {filename: "GraphApp.h",label: "DFS"})            
MERGE (a)->[:read {condition: "kWeighted /\ kUndirected"}]->(b)                    
MATCH (a:cVariable {filename: "GraphApp.h",label: "nodeID"}), (b:cFunction {filename: "GraphApp.h",label: "DFS"})            
MERGE (a)->[:read {condition: "kWeighted /\ kUndirected"}]->(b)                    
MATCH (a:cVariable {filename: "GraphApp.h",label: "nodeID"}), (b:cVariable {filename: "GraphApp.h",label: "parent"})         
MERGE (a)->[:varWrite {condition: "kWeighted /\ !kUndirected"}]->(b)               
MATCH (a:cVariable {filename: "GraphApp.h",label: "nodeID"}), (b:cFunction {filename: "GraphApp.h",label: "DFS"})            
MERGE (a)->[:varInfFunc {condition: "kWeighted /\ !kUndirected"}]->(b)             
MATCH (a:cVariable {filename: "GraphApp.h",label: "parent"}), (b:cFunction {filename: "GraphApp.h",label: "DFS"})            
MERGE (a)->[:read {condition: "kUndirected"}]->(b)                                 
MATCH (a:cVariable {filename: "GraphApp.cc",label: "srcID"}), (b:cFunction {filename: "GraphApp.h",label: "DFS"})            
MERGE (a)->[:read {condition: "kWeighted /\ kUndirected"}]->(b)                    
MATCH (a:cVariable {filename: "GraphApp.cc",label: "srcID"}), (b:cVariable {filename: "GraphApp.cc",label: "next"})          
MERGE (a)->[:varWrite {condition: "kWeighted /\ kUndirected"}]->(b)                
MATCH (a:cVariable {filename: "GraphApp.cc",label: "count"}), (b:cFunction {filename: "GraphApp.h",label: "MSTPrim"})        
MERGE (a)->[:read {condition: "kWeighted /\ kUndirected"}]->(b)                    
MATCH (a:cVariable {filename: "GraphApp.cc",label: "count"}), (b:cFunction {filename: "Node.h",label: "getID"})              
MERGE (a)->[:varInfFunc {condition: "kWeighted /\ kUndirected"}]->(b)              
MATCH (a:cVariable {filename: "GraphApp.cc",label: "currNodeID"}), (b:cVariable {filename: "GraphApp.cc",label: "edge"})          
MERGE (a)->[:varWrite {condition: "kWeighted /\ kUndirected"}]->(b)                
MATCH (a:cVariable {filename: "GraphApp.cc",label: "currNodeID"}), (b:cVariable {filename: "Edge.h",label: "currNodeID"})         
MERGE (a)->[:varWrite {condition: "kWeighted /\ kUndirected"}]->(b)                
MATCH (a:cVariable {filename: "GraphApp.cc",label: "currNodeID"}), (b:cFunction {filename: "Edge.h",label: "getNext"})            
MERGE (a)->[:varInfFunc {condition: "kWeighted /\ kUndirected"}]->(b)              
MATCH (a:cVariable {filename: "GraphApp.cc",label: "edge"}), (b:cFunction {filename: "GraphApp.h",label: "MSTPrim"})        
MERGE (a)->[:read {condition: "kWeighted /\ kUndirected"}]->(b)                    
MATCH (a:cVariable {filename: "GraphApp.cc",label: "edge"}), (b:cVariable {filename: "GraphApp.cc",label: "minEdge"})       
MERGE (a)->[:varWrite {condition: "kWeighted /\ kUndirected"}]->(b)                
MATCH (a:cVariable {filename: "GraphApp.cc",label: "i"}), (b:cFunction {filename: "GraphApp.h",label: "MSTPrim"})        
MERGE (a)->[:read {condition: "kWeighted /\ kUndirected"}]->(b)                    
MATCH (a:cVariable {filename: "GraphApp.cc",label: "i"}), (b:cFunction {filename: "Node.h",label: "setValue"})           
MERGE (a)->[:varInfFunc {condition: "kWeighted /\ kUndirected"}]->(b)              
MATCH (a:cVariable {filename: "GraphApp.cc",label: "min"}), (b:cFunction {filename: "GraphApp.h",label: "MSTPrim"})        
MERGE (a)->[:read {condition: "kWeighted /\ kUndirected"}]->(b)                    
MATCH (a:cVariable {filename: "GraphApp.cc",label: "min"}), (b:cVariable {filename: "GraphApp.cc",label: "total"})         
MERGE (a)->[:varWrite {condition: "kWeighted /\ kUndirected"}]->(b)                
MATCH (a:cVariable {filename: "GraphApp.cc",label: "minEdge"}), (b:cVariable {filename: "GraphApp.cc",label: "MST"})           
MERGE (a)->[:varWrite {condition: "kWeighted /\ kUndirected"}]->(b)                
MATCH (a:cVariable {filename: "GraphApp.cc",label: "next"}), (b:cFunction {filename: "GraphApp.h",label: "MSTPrim"})        
MERGE (a)->[:read {condition: "kWeighted /\ kUndirected"}]->(b)                    
MATCH (a:cVariable {filename: "GraphApp.cc",label: "next"}), (b:cVariable {filename: "GraphApp.cc",label: "minIndex"})      
MERGE (a)->[:varWrite {condition: "kWeighted /\ kUndirected"}]->(b)                
MATCH (a:cVariable {filename: "GraphApp.cc",label: "next"}), (b:cFunction {filename: "Node.h",label: "getValue"})           
MERGE (a)->[:varInfFunc {condition: "kWeighted /\ kUndirected"}]->(b)              
MATCH (a:cVariable {filename: "GraphApp.cc",label: "next"}), (b:cFunction {filename: "Edge.h",label: "getWeight"})          
MERGE (a)->[:varInfFunc {condition: "kWeighted /\ kUndirected"}]->(b)              
MATCH (a:cVariable {filename: "GraphApp.cc",label: "total"}), (b:cFunction {filename: "GraphApp.h",label: "MSTPrim"})        
MERGE (a)->[:read {condition: "kWeighted /\ kUndirected"}]->(b)                    
MATCH (a:cVariable {filename: "GraphApp.h",label: "UPDATENODE"}), (b:cFunction {filename: "GraphApp.h",label: "updateName"})     
MERGE (a)->[:varInfFunc {condition: "true"}]->(b)                                  
MATCH (a:cVariable {filename: "GraphApp.cc",label: "targetName"}), (b:cFunction {filename: "Node.h",label: "getName"})            
MERGE (a)->[:varInfFunc {condition: "true"}]->(b)                                  
MATCH (a:cVariable {filename: "GraphApp.cc",label: "newNode"}), (b:cVariable {filename: "GraphApp.h",label: "nodes"})          
MERGE (a)->[:varWrite {condition: "true"}]->(b)                                    
MATCH (a:cVariable {filename: "GraphApp.cc",label: "srcName"}), (b:cFunction {filename: "Node.h",label: "getName"})            
MERGE (a)->[:varInfFunc {condition: "true"}]->(b)                                  
MATCH (a:cVariable {filename: "GraphApp.cc",label: "srcName"}), (b:cFunction {filename: "GraphApp.h",label: "checkNode"})      
MERGE (a)->[:varInfFunc {condition: "true"}]->(b)                                  
MATCH (a:cVariable {filename: "GraphApp.cc",label: "targetName"}), (b:cFunction {filename: "Node.h",label: "getName"})            
MERGE (a)->[:varInfFunc {condition: "true"}]->(b)                                  
MATCH (a:cVariable {filename: "GraphApp.cc",label: "newNode"}), (b:cVariable {filename: "GraphApp.h",label: "nodes"})          
MERGE (a)->[:varWrite {condition: "true"}]->(b)                                    
MATCH (a:cVariable {filename: "GraphApp.cc",label: "srcName"}), (b:cFunction {filename: "GraphApp.h",label: "checkNode"})      
MERGE (a)->[:varInfFunc {condition: "true"}]->(b)                                  
MATCH (a:cVariable {filename: "GraphApp.cc",label: "srcName"}), (b:cFunction {filename: "Node.h",label: "getName"})            
MERGE (a)->[:varInfFunc {condition: "true"}]->(b)                                  
MATCH (a:cVariable {filename: "GraphApp.cc",label: "newNode"}), (b:cVariable {filename: "GraphApp.h",label: "nodes"})          
MERGE (a)->[:varWrite {condition: "true"}]->(b)                                    
MATCH (a:cVariable {filename: "GraphApp.h",label: "nodeName"}), (b:cFunction {filename: "GraphApp.h",label: "checkNode"})      
MERGE (a)->[:varInfFunc {condition: "true"}]->(b)                                  
MATCH (a:cVariable {filename: "GraphApp.cc",label: "i"}), (b:cFunction {filename: "GraphApp.h",label: "checkNode"})      
MERGE (a)->[:read {condition: "true"}]->(b)                                        
MATCH (a:cVariable {filename: "GraphApp.h",label: "nodeName"}), (b:cFunction {filename: "Node.h",label: "getName"})            
MERGE (a)->[:varInfFunc {condition: "true"}]->(b)                                  
MATCH (a:cVariable {filename: "GraphApp.cc",label: "compNum"}), (b:cFunction {filename: "GraphApp.h",label: "conComps"})       
MERGE (a)->[:read {condition: "(kBFS \/ kDFS) /\ kUndirected"}]->(b)               
MATCH (a:cVariable {filename: "GraphApp.cc",label: "command"}), (b:cFunction {filename: "GraphApp.h",label: "updateName"})     
MERGE (a)->[:varInfFunc {condition: "true"}]->(b)                                  
MATCH (a:cVariable {filename: "GraphApp.cc",label: "command"}), (b:cFunction {filename: "GraphApp.h",label: "addNode"})        
MERGE (a)->[:varInfFunc {condition: "true"}]->(b)                                  
MATCH (a:cVariable {filename: "GraphApp.cc",label: "weight"}), (b:cVariable {filename: "GraphApp.h",label: "weight"})         
MERGE (a)->[:varWrite {condition: "kWeighted"}]->(b)                               
MATCH (a:cVariable {filename: "GraphApp.cc",label: "weight"}), (b:cVariable {filename: "GraphApp.h",label: "newWeight"})      
MERGE (a)->[:varWrite {condition: "kWeighted"}]->(b)                               
MATCH (a:cVariable {filename: "GraphApp.cc",label: "i"}), (b:cVariable {filename: "GraphApp.cc",label: "vect"})          
MERGE (a)->[:varWrite {condition: "true"}]->(b)                                    
MATCH (a:cVariable {filename: "GraphApp.cc",label: "toggleValue"}), (b:cFunction {filename: "GraphApp.h",label: "loadConfig"})     
MERGE (a)->[:read {condition: "true"}]->(b)                                        
MATCH (a:cVariable {filename: "GraphApp.cc",label: "toggleValue"}), (b:cVariable {filename: "GraphApp.h",label: "kWeighted"})      
MERGE (a)->[:varWrite {condition: "true"}]->(b)                                    
MATCH (a:cVariable {filename: "GraphApp.cc",label: "toggleValue"}), (b:cVariable {filename: "GraphApp.h",label: "kPrim"})          
MERGE (a)->[:varWrite {condition: "true"}]->(b)                                    
MATCH (a:cVariable {filename: "GraphApp.cc",label: "toggleValue"}), (b:cVariable {filename: "GraphApp.h",label: "kDFS"})           
MERGE (a)->[:varWrite {condition: "true"}]->(b)                                    
MATCH (a:cVariable {filename: "GraphApp.cc",label: "toggleValue"}), (b:cVariable {filename: "GraphApp.h",label: "kUndirected"})    
MERGE (a)->[:varWrite {condition: "true"}]->(b)                                    
MATCH (a:cVariable {filename: "GraphApp.cc",label: "toggleValue"}), (b:cVariable {filename: "GraphApp.h",label: "kDirected"})      
MERGE (a)->[:varWrite {condition: "true"}]->(b)                                    
MATCH (a:cVariable {filename: "GraphApp.cc",label: "toggleValue"}), (b:cVariable {filename: "GraphApp.h",label: "kConnectedComps"})
MERGE (a)->[:varWrite {condition: "true"}]->(b)                                    
MATCH (a:cVariable {filename: "GraphApp.cc",label: "toggleValue"}), (b:cVariable {filename: "GraphApp.h",label: "kCycle"})         
MERGE (a)->[:varWrite {condition: "true"}]->(b)                                    
MATCH (a:cVariable {filename: "GraphApp.cc",label: "toggleValue"}), (b:cVariable {filename: "GraphApp.h",label: "kSearch"})        
MERGE (a)->[:varWrite {condition: "true"}]->(b)                                    
MATCH (a:cVariable {filename: "GraphApp.cc",label: "toggleValue"}), (b:cVariable {filename: "GraphApp.h",label: "kBFS"})           
MERGE (a)->[:varWrite {condition: "true"}]->(b)                                    
MATCH (a:cVariable {filename: "GraphApp.cc",label: "target"}), (b:cFunction {filename: "Node.h",label: "getName"})            
MERGE (a)->[:varInfFunc {condition: "true"}]->(b)                                  
MATCH (a:cVariable {filename: "GraphApp.cc",label: "i"}), (b:cFunction {filename: "GraphApp.h",label: "loadGraph"})      
MERGE (a)->[:read {condition: "true"}]->(b)                                        
MATCH (a:cVariable {filename: "GraphApp.cc",label: "j"}), (b:cFunction {filename: "GraphApp.h",label: "loadGraph"})      
MERGE (a)->[:read {condition: "true"}]->(b)                                        
MATCH (a:cVariable {filename: "GraphApp.cc",label: "lineElem"}), (b:cVariable {filename: "GraphApp.cc",label: "lineElems"})     
MERGE (a)->[:varWrite {condition: "true"}]->(b)                                    
MATCH (a:cVariable {filename: "GraphApp.cc",label: "newNode"}), (b:cVariable {filename: "GraphApp.h",label: "nodes"})          
MERGE (a)->[:varWrite {condition: "true"}]->(b)                                    
MATCH (a:cVariable {filename: "GraphApp.cc",label: "source"}), (b:cFunction {filename: "Node.h",label: "getName"})            
MERGE (a)->[:varInfFunc {condition: "true"}]->(b)                                  
MATCH (a:cVariable {filename: "GraphApp.cc",label: "source"}), (b:cFunction {filename: "GraphApp.h",label: "checkNode"})      
MERGE (a)->[:varInfFunc {condition: "true"}]->(b)                                  
MATCH (a:cVariable {filename: "GraphApp.cc",label: "i"}), (b:cFunction {filename: "GraphApp.h",label: "printEdges"})     
MERGE (a)->[:read {condition: "true"}]->(b)                                        
MATCH (a:cVariable {filename: "GraphApp.cc",label: "i"}), (b:cFunction {filename: "Node.h",label: "getName"})            
MERGE (a)->[:varInfFunc {condition: "true"}]->(b)                                  
MATCH (a:cVariable {filename: "GraphApp.cc",label: "i"}), (b:cFunction {filename: "Edge.h",label: "getSrcID"})           
MERGE (a)->[:varInfFunc {condition: "true"}]->(b)                                  
MATCH (a:cVariable {filename: "GraphApp.cc",label: "i"}), (b:cFunction {filename: "Edge.h",label: "getWeight"})          
MERGE (a)->[:varInfFunc {condition: "true"}]->(b)                                  
MATCH (a:cVariable {filename: "GraphApp.cc",label: "i"}), (b:cFunction {filename: "Edge.h",label: "getTargetID"})        
MERGE (a)->[:varInfFunc {condition: "true"}]->(b)                                  
MATCH (a:cVariable {filename: "GraphApp.cc",label: "targetID"}), (b:cFunction {filename: "GraphApp.h",label: "updateWeight"})   
MERGE (a)->[:read {condition: "true"}]->(b)                                        
MATCH (a:cVariable {filename: "GraphApp.cc",label: "targetID"}), (b:cFunction {filename: "Edge.h",label: "getTargetID"})        
MERGE (a)->[:varInfFunc {condition: "true"}]->(b)                                  
MATCH (a:cVariable {filename: "GraphApp.cc",label: "i"}), (b:cFunction {filename: "GraphApp.h",label: "updateWeight"})   
MERGE (a)->[:read {condition: "true"}]->(b)                                        
MATCH (a:cVariable {filename: "GraphApp.h",label: "newWeight"}), (b:cFunction {filename: "GraphApp.h",label: "updateWeight"})   
MERGE (a)->[:read {condition: "true"}]->(b)                                        
MATCH (a:cVariable {filename: "GraphApp.h",label: "newWeight"}), (b:cVariable {filename: "Edge.h",label: "weight"})             
MERGE (a)->[:varWrite {condition: "true"}]->(b)                                    
MATCH (a:cVariable {filename: "GraphApp.cc",label: "srcID"}), (b:cFunction {filename: "GraphApp.h",label: "updateWeight"})   
MERGE (a)->[:read {condition: "kUndirected"}]->(b)                                 
MATCH (a:cVariable {filename: "GraphApp.cc",label: "srcID"}), (b:cFunction {filename: "Edge.h",label: "getSrcID"})           
MERGE (a)->[:varInfFunc {condition: "kUndirected"}]->(b)                           
MATCH (a:cVariable {filename: "GraphApp.cc",label: "srcName"}), (b:cFunction {filename: "Node.h",label: "getName"})            
MERGE (a)->[:varInfFunc {condition: "true"}]->(b)                                  
MATCH (a:cVariable {filename: "GraphApp.cc",label: "srcName"}), (b:cFunction {filename: "Node.h",label: "getID"})              
MERGE (a)->[:varInfFunc {condition: "true"}]->(b)                                  
MATCH (a:cVariable {filename: "GraphApp.cc",label: "i"}), (b:cFunction {filename: "GraphApp.h",label: "updateName"})     
MERGE (a)->[:read {condition: "true"}]->(b)                                        
MATCH (a:cVariable {filename: "GraphApp.h",label: "nodeName"}), (b:cFunction {filename: "Node.h",label: "setName"})            
MERGE (a)->[:varInfFunc {condition: "true"}]->(b)                                  
MATCH (a:cVariable {filename: "GraphApp.h",label: "nodeName"}), (b:cFunction {filename: "Node.h",label: "getName"})            
MERGE (a)->[:varInfFunc {condition: "true"}]->(b)                                  
MATCH (a:cVariable {filename: "GraphApp.h",label: "visited"}), (b:cFunction {filename: "Node.h",label: "getValue"})           
MERGE (a)->[:varInfFunc {condition: "kWeighted /\ kUndirected"}]->(b)              
MATCH (a:cVariable {filename: "GraphApp.h",label: "visited"}), (b:cFunction {filename: "Edge.h",label: "getNext"})            
MERGE (a)->[:varInfFunc {condition: "kWeighted /\ kUndirected"}]->(b)              
MATCH (a:cVariable {filename: "GraphApp.h",label: "visited"}), (b:cFunction {filename: "Node.h",label: "getID"})              
MERGE (a)->[:varInfFunc {condition: "kDFS"}]->(b)                                  
MATCH (a:cVariable {filename: "GraphApp.h",label: "visited"}), (b:cFunction {filename: "Edge.h",label: "getWeight"})          
MERGE (a)->[:varInfFunc {condition: "kWeighted /\ kUndirected"}]->(b)              
MATCH (a:cVariable {filename: "GraphApp.cc",label: "i"}), (b:cFunction {filename: "GraphApp.h",label: "~GraphApp"})      
MERGE (a)->[:read {condition: "true"}]->(b)                                        
MATCH (a:cVariable {filename: "GraphApp.cc",label: "i"}), (b:cVariable {filename: "GraphApp.h",label: "nodes"})          
MERGE (a)->[:varWrite {condition: "true"}]->(b)                                    
MATCH (a:cVariable {filename: "Node.h",label: "neighborID"}), (b:cVariable {filename: "Node.h",label: "neighbors"})          
MERGE (a)->[:varWrite {condition: "true"}]->(b)                                    
MATCH (a:cVariable {filename: "GraphApp.h",label: "kWeighted"}), (b:cFunction {filename: "GraphApp.h",label: "MSTPrim"})        
MERGE (a)->[:read {condition: "true"}]->(b)                                        
MATCH (a:cVariable {filename: "GraphApp.h",label: "kWeighted"}), (b:cFunction {filename: "Node.h",label: "getNgbrs"})           
MERGE (a)->[:varInfFunc {condition: "!kWeighted"}]->(b)                            
MATCH (a:cVariable {filename: "GraphApp.h",label: "kWeighted"}), (b:cFunction {filename: "Node.h",label: "getName"})            
MERGE (a)->[:varInfFunc {condition: "kWeighted /\ kUndirected"}]->(b)              
MATCH (a:cVariable {filename: "GraphApp.h",label: "kWeighted"}), (b:cFunction {filename: "Node.h",label: "getID"})              
MERGE (a)->[:varInfFunc {condition: "kWeighted"}]->(b)                             
MATCH (a:cVariable {filename: "GraphApp.h",label: "kWeighted"}), (b:cFunction {filename: "GraphApp.h",label: "addEdge"})        
MERGE (a)->[:varInfFunc {condition: "!kWeighted"}]->(b)                            
MATCH (a:cVariable {filename: "GraphApp.h",label: "kWeighted"}), (b:cFunction {filename: "GraphApp.h",label: "updateWeight"})   
MERGE (a)->[:varInfFunc {condition: "kWeighted"}]->(b)                             
MATCH (a:cVariable {filename: "GraphApp.h",label: "kWeighted"}), (b:cFunction {filename: "GraphApp.h",label: "printNgbrs"})     
MERGE (a)->[:varInfFunc {condition: "!kWeighted"}]->(b)                            
MATCH (a:cVariable {filename: "GraphApp.h",label: "kWeighted"}), (b:cFunction {filename: "GraphApp.h",label: "addEdge"})        
MERGE (a)->[:varInfFunc {condition: "kWeighted"}]->(b)                             
MATCH (a:cVariable {filename: "GraphApp.h",label: "kWeighted"}), (b:cFunction {filename: "GraphApp.h",label: "printEdges"})     
MERGE (a)->[:varInfFunc {condition: "kWeighted"}]->(b)
